plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
    id "org.jetbrains.kotlin.jvm" version "2.0.20"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
    maven { url "https://maven.pkg.jetbrains.space/public/p/kotlinx-coroutines/maven" }
    maven { url "https://maven.pkg.jetbrains.space/kotlin/p/kotlin/dev" }
    maven { url "https://maven.pkg.jetbrains.space/kotlin/p/kotlin/kotlin-dev" }
    maven {
        url "https://maven.squiddev.cc"
        content {
            includeGroup("cc.tweaked")
        }
    }
    maven {url "https://maven.squiddev.cc"}
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://maven.fabricmc.net/"}
    maven { url "https://maven.pkg.jetbrains.space/public/p/kotlinx/maven" }
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation("cc.tweaked:cc-tweaked-1.20.1-fabric:1.116.0")
    modCompileOnly("cc.tweaked:cc-tweaked-1.20.1-fabric-api:1.116.0")
	runtimeOnly("com.electronwill.night-config:toml:3.6.5")
	runtimeOnly("org.squiddev:Cobalt:0.7.3")

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = 17
    }
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == "org.jetbrains.kotlin" &&
                details.requested.name == "kotlin-metadata-jvm") {
            details.useTarget("org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.9.0")
            details.because("Kotlin plugin requests non-existent kotlin-metadata-jvm, redirect to kotlinx-metadata-jvm")
        }
    }
}


java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}